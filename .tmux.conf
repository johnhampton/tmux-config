# set-option -g default-command "reattach-to-user-namespace -l bash"

set -g prefix C-a
unbind C-b
bind a send-prefix

# use v and s for windows splits
unbind %
bind s split-window -v
bind v split-window -h

setw -g mode-mouse on
set -g mouse-select-window on
set -g mouse-select-pane on
set -g mouse-resize-pane on

set -g history-limit 10000

setw -g utf8 on
set -g default-terminal "screen-256color"

setw -g mode-keys vi
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection

# and HJKL for resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# bind r to reload tmux.conf
bind r source-file ~/.tmux.conf

# Theme generated from vim-tmuxline
source-file ~/.tmux.theme.conf

# plugins
set -g @tpm_plugins '          \
  tmux-plugins/tmux-yank       \
'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
